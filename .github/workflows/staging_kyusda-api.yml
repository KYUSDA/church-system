name: Deploy Node.js API from /server to Azure Web App - kyusda-api

on:
  push:
    branches:
      - staging
    paths:
      - 'server/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    defaults:
      run:
        working-directory: ./server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Install dependencies and build
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Zip server build
        run: zip -r ../server_build.zip .

      - name: Upload server artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-api
          path: server_build.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-api

      - name: Unzip server build
        run: unzip -o server_build.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_E829956A197B42A1B38918A43E2E1ACC }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_C4D628DED0524D8A8EDE8E216A1EE7CD }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_ABA91950E8404E0C887F832860C8DE60 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'kyusda-api'
          slot-name: 'Production'
          package: .
